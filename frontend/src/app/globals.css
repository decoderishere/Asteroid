@tailwind base;
@tailwind components;
@tailwind utilities;

/* Class-based theming that matches next-themes ("html.dark") */
@layer base {
  body {
    @apply bg-gray-50 text-gray-900;
  }
  html.dark body {
    @apply bg-gray-900 text-gray-100;
  }
}

@layer components {
  /* === Your existing UI utility classes (kept) === */
  .btn-primary {
    @apply bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-md transition-colors;
  }

  .btn-secondary {
    @apply bg-gray-200 hover:bg-gray-300 text-gray-800 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-200 font-medium py-2 px-4 rounded-md transition-colors;
  }

  .card {
    @apply bg-white dark:bg-gray-800 shadow-md rounded-lg p-6 border border-gray-200 dark:border-gray-700;
  }

  .input {
    @apply border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-gray-900 dark:text-gray-100 bg-white dark:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-primary-500;
  }

  input, textarea, select {
    @apply text-gray-900 dark:text-gray-100 bg-white dark:bg-gray-800;
  }

  input::placeholder, textarea::placeholder {
    @apply text-gray-500 dark:text-gray-400;
  }

  /* === New: make generated output readable in both themes === */
  .safe-output, .safe-output * {
    color: #111 !important;            /* light text color */
    background: #fff !important;       /* light background */
  }
  .dark .safe-output, .dark .safe-output * {
    color: #e5e7eb !important;         /* gray-200 */
    background: #111827 !important;    /* gray-900 */
  }

  /* Readable code blocks in prose */
  .prose :where(pre, code, kbd, samp) {
    @apply bg-gray-100 text-gray-900 rounded-md;
  }
  .dark .prose :where(pre, code, kbd, samp) {
    @apply bg-gray-800 text-gray-100;
  }

  /* Let prose text inherit the container's color */
  .prose :where(h1,h2,h3,h4,h5,h6,strong,em,a,blockquote,li,p) {
    @apply text-inherit;
  }
}
